---
- name: Copy over uac tool, run it and extract results.
  hosts: uac_target
  become: true
  gather_facts: true
  tasks:

    - name: Make landing directories /uac/tmp
      ansible.builtin.file:
        path: /uac/tmp
        state: directory
        mode: '0755'

    - name: Copy over uac tool from uac folder of version uac_version to target and place it at /uac
      ansible.builtin.copy:
        src: "uac/{{ uac_version }}/uac-{{ uac_version }}.tar.gz"
        dest: /uac/
        mode: '0755'

    - name: Unarchive uac tar file.
      ansible.builtin.unarchive:
        src: /uac/uac-{{ uac_version }}.tar.gz
        dest: /uac/
        remote_src: true

    - name: Run uac command-line tool, this may take a while.
      ansible.builtin.command:
        cmd: ./uac -p full /uac/tmp
        creates: /uac/tmp/uac-*.tar.gz
      args:
        chdir: "/uac/uac-{{ uac_version }}"
      timeout: 7200
      register: uac_results

    - name: Create results landing directory.
      tags: test
      become: false
      ansible.builtin.file:
        state: directory
        path: "{{ playbook_dir }}/files/results/{{ ansible_host }}-{{ ansible_date_time.iso8601 }}"
        mode: '0755'
      register: results_landing_dir
      delegate_to: localhost

    - name: Recursively find /uac/tmp files for next step.
      tags: test
      ansible.builtin.find:
        paths: /uac/tmp
        recurse: true
      register: uac_results

    - name: Copy resulting .log and .tar.gz files from /uac/tmp and place them in results folder with timestamp.
      tags: test
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: "{{ results_landing_dir.path }}/{{ item.path.split('/')[-1] }}"
        flat: true
      loop: "{{ uac_results.files }}"

    - name: List next step.
      ansible.builtin.debug:
        msg: "The UAC tool's results are ready in the files/results folder. They must be copied over to the appropriate Box folder for the CSIRT team to inspect."